# https://www.kaggle.com/oimosanchi/cassava-leaf-disease-exploratory-data-analysis/edit/run/47512654
# 1つの画像から複数の画像を生成する
### 共通部分 ###
def plot_augmentation(image_id, transform):
    plt.figure(figsize=(16, 4))
    img = cv2.imread(os.path.join(BASE_DIR, "train_images", image_id))
    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)

    plt.subplot(1, 3, 1)
    plt.imshow(img)
    plt.axis("off")

    plt.subplot(1, 3, 2)
    x = transform(image=img)["image"]
    plt.imshow(x)
    plt.axis("off")

    plt.subplot(1, 3, 3)
    x = transform(image=img)["image"]
    plt.imshow(x)
    plt.axis("off")
    
    plt.show()
    
### No1 ランダムにアフィン変換を適用する（平行移動、拡大縮小、回転）
transform_shift_scale_rotate = A.ShiftScaleRotate(
    p=1.0, 
    shift_limit=(-0.3, 0.3), 
    scale_limit=(-0.1, 0.1), 
    rotate_limit=(-180, 180), 
    interpolation=0, 
    border_mode=4, 
)

plot_augmentation("1003442061.jpg", transform_shift_scale_rotate)

#####
## https://qiita.com/kurilab/items/b69e1be8d0224ae139ad
# shift_limit: 平行移動の範囲。Default: (-0.0625, 0.0625)。
# scale_limit: 拡大縮小率の範囲 (0が変化なしなので注意)。Default: (-0.1, 0.1).
# rotate_limit: rotation range. 回転の範囲。 Default: (-45, 45).


### No2 矩形領域の粗いDropout（最小値も指定可能） 画像の細部を見ないようにするための処理
transform_coarse_dropout = A.CoarseDropout(
    p=1.0, 
    max_holes=100, 
    max_height=50, 
    max_width=50, 
    min_holes=30, 
    min_height=20, 
    min_width=20,
)

plot_augmentation("1003442061.jpg", transform_coarse_dropout)
#####
## https://qiita.com/kurilab/items/b69e1be8d0224ae139ad
# max_holes (int) – ゼロに落とす領域数の最大数。
# max_height (int) – 領域の最大高さ。Defalt: 8.
# max_width (int) – 領域の最大幅。Defalt: 8.
# min_holes (int) – ゼロに落とす領域数の最小数。Default: None.
# min_height (int) – 領域の最小高さ。Default: None.
# min_width – 領域の最小幅。Default: None.
# fill_value (int, float, lisf of int, list of float). 落とした領域の画素値。Defalt: 0.

### No3 No1 + No2
transform = A.Compose(
    transforms=[
        transform_shift_scale_rotate,
        transform_coarse_dropout
    ],
    p=1.0,
)

plot_augmentation("1003442061.jpg", transform)
